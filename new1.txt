public TokenService(
            OIDCRepository oidcRepository,
            SCVRepository scvRepository,
            String oidcTokenUrl,
            String scvNamespace,
            String scvClientIdKey,
            String scvCredKey,
            long oidcTokenExpiryInSecond
    ) throws Exception {

        this.oidcRepository = oidcRepository;
        this.scvRepository = scvRepository;
        this.oidcTokenUrl = oidcTokenUrl;
        this.oidcTokenExpiryInSecond = oidcTokenExpiryInSecond;

        ObjectMapper objectMapper = new ObjectMapper();

        // Get clientId and private key from SCV
        this.clientId = scvRepository.tellKey(scvNamespace, scvClientIdKey, null).getData();

        String privateKeyJson = scvRepository.tellKey(scvNamespace, scvCredKey, null).getData();
        Data privateKeyData = objectMapper.readValue(privateKeyJson, Data.class);

        this.privateKey = getRsaKey(privateKeyData.getPrivateKey());
    }





@Bean
public TokenService tokenService(SCVRepository scvRepository) throws Exception {
    return new TokenService(
            oidcRepository(),
            scvRepository,
            System.getProperty("tokenservice.oidctokenurl"),
            System.getProperty("tokenservice.scvnamespace"),
            System.getProperty("tokenservice.scvclientidkey"),
            System.getProperty("tokenservice.scvcredkey"),
            3600L
    );
}
